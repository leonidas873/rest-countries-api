{"version":3,"sources":["redux/actionTypes.js","components/header/Header.js","redux/actions.js","components/main/nav/Nav.js","components/main/catalog/Paginate.js","components/main/catalog/Catalog.js","API.js","components/main/main.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["actionTypes","Header","dispatch","useDispatch","darkMode","useSelector","state","className","onClick","type","payload","Nav","useState","showCategories","setShowCategories","searchValue","setSearchValue","categoryTitle","setCategoryTitle","onCategoryClick","onRegionClick","e","region","target","innerText","placeholder","value","onChange","darkStyle","makeStyles","theme","root","marginTop","spacing","backgroundColor","color","lightStyle","justifyContent","margin","Paginate","pages","onChangePage","classes","Pagination","count","boundaryCount","variant","shape","event","Catalog","allCountries","searchQuery","countries","filter","country","name","toUpperCase","includes","console","log","currentPage","setCurrentPage","Math","ceil","length","indexOfLastCountry","indexOfFirstCountry","currentPageCountries","slice","useEffect","axios","get","then","res","setAllCountries","data","map","src","flag","alt","population","capital","Main","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"qUAAaA,EACK,gBADLA,EAEU,oBAFVA,EAGS,mBAHTA,EAIG,a,OCqBDC,EApBA,WACb,IAAMC,EAAWC,cACXC,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YAK9C,OACE,qBAAKG,UAAS,iBAAYH,EAAW,eAAiB,IAAtD,SACE,sBAAKG,UAAU,kBAAf,UACA,oBAAIA,UAAU,gBAAd,iCACA,sBAAKA,UAAU,wBAAwBC,QARnB,WACtBN,ECNK,CACLO,KAAMT,EACNU,SDIqBN,KAOnB,UACE,cAAC,IAAD,IACA,mD,wBEuCOO,G,MAjDH,WACR,IAAMT,EAAWC,cACXC,EAAWC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,YAC1C,EAA2CQ,oBAAS,GAApD,mBAAOC,EAAP,KAAsBC,EAAtB,KACA,EAAqCF,mBAAS,IAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAyCJ,mBAAS,oBAAlD,mBAAOK,EAAP,KAAqBC,EAArB,KACMC,EAAkB,WACpBL,GAAkBD,IAGhBO,EAAgB,SAACC,GDKF,IAACC,ECJpBpB,GDIoBoB,ECJDD,EAAEE,OAAOC,UDKzB,CACLf,KAAKT,EACLU,QAASY,KCNRJ,EAAiBG,EAAEE,OAAOC,YAQ7B,OACE,sBAAKjB,UAAU,MAAf,UACE,sBAAKA,UAAS,sBAAiBH,EAAW,oBAAsB,IAAhE,UACE,cAAC,IAAD,CAAiBG,UAAU,mBAAmBC,QARjC,WACfN,EDPG,CACLO,KAAMT,EACNU,QCK0BK,OAQtB,uBACER,UAAU,oBACVE,KAAK,OACLgB,YAAY,0BACZC,MAAOX,EACPY,SAAU,SAAAN,GAAC,OAAEL,EAAeK,EAAEE,OAAOG,aAGzC,sBAAKnB,UAAS,wBAAmBH,EAAW,sBAAwB,IAApE,UACE,sBAAKG,UAAU,kBAAmBC,QAASW,EAA3C,UACE,6BAAKF,IACJJ,EAAiB,cAAC,IAAD,IAAkB,cAAC,IAAD,OAErCA,GAAkB,sBAAKN,UAAU,oBAAoBC,QAASW,EAA5C,UACjB,qBAAKZ,UAAU,mBAAmBC,QAASY,EAA3C,oBACA,qBAAKb,UAAU,mBAAmBC,QAASY,EAA3C,qBACA,qBAAKb,UAAU,mBAAmBC,QAASY,EAA3C,kBACA,qBAAKb,UAAU,mBAAmBC,QAASY,EAA3C,oBACA,qBAAKb,UAAU,mBAAmBC,QAASY,EAA3C,gC,iDC7CJQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzB,2EAA4E,CAC1EC,gBAAiB,UACjBC,MAAM,UAIV,wBAAyB,CACvBD,gBAAiB,UACjBC,MAAM,cAKNC,EAAaP,aAAW,SAACC,GAAD,MAAY,CACxCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,GACzB,2EAA4E,CAC1EC,gBAAiB,QACjBC,MAAM,YAIV,wBAAyB,CACvBD,gBAAiB,UACjBC,MAAM,UACNH,UAAU,QAEZ,uBAAuB,CACrBK,eAAe,SACfC,OAAO,aA0BEC,EArBE,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAMC,EAAkB,EAAlBA,aAEjBC,EADWrC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,YACjBwB,IAAcQ,IAIzC,OACE,qBAAK7B,UAAWmC,EAAQX,KAAxB,SACE,cAACY,EAAA,EAAD,CACEC,MAAOJ,EACPK,cAAe,EAEfC,QAAQ,WACRC,MAAM,UACNpB,SAXa,SAACqB,EAAOtB,GACzBe,EAAaf,SC8BFuB,EAvEC,WACd,IAAM/C,EAAWC,cACX+C,EAAe7C,aAAY,SAACC,GAAD,OAAWA,EAAM4C,gBAC5C9C,EAAWC,aAAY,SAACC,GAAD,OAAWA,EAAMF,YACxC+C,EAAc9C,aAAY,SAACC,GAAD,OAAWA,EAAM6C,eAC3C7B,EAASjB,aAAY,SAACC,GAAD,OAAWA,EAAMgB,UAEtC8B,EAAYF,EAAaG,QAC7B,SAACC,GAAD,OACEA,EAAQC,KAAKC,cAAcC,SAASN,EAAYK,gBAChDF,EAAQhC,OAAOmC,SAASnC,MAG9BoC,QAAQC,IAAIP,GACV,MAAsCxC,mBAAS,GAA/C,mBAAOgD,EAAP,KAAoBC,EAApB,KAEMrB,EAAQsB,KAAKC,KAAKX,EAAUY,OADT,IAEnBC,EAFmB,GAEEL,EACrBM,EAAsBD,EAHH,GAInBE,EAAuBf,EAAUgB,MACrCF,EACAD,GAaF,OANAI,qBAAU,WChCFC,IAAMC,IAAI,wCDiCIC,MAAK,SAACC,GACxBvE,EH5ByB,SAACkD,GAC9B,MAAO,CACL3C,KAAMT,EACNU,QAAS0C,GGyBEsB,CAAgBD,EAAIE,YAG9B,CAACzE,IAEF,sBAAKK,UAAU,UAAf,UACE,qBAAKA,UAAU,qBAAf,SACG4D,GACCA,EAAqBS,KAAI,SAACtB,GAAD,OACvB,sBACE/C,UAAS,2BACPH,EAAW,yBAA2B,IAF1C,UAME,qBAAKG,UAAU,gBAAgBsE,IAAKvB,EAAQwB,KAAMC,IAAI,KACtD,sBAAKxE,UAAU,gBAAf,UACE,oBAAIA,UAAU,gBAAd,SAA+B+C,EAAQC,OACvC,qBAAIhD,UAAU,sBAAd,UACE,qBAAIA,UAAU,oBAAd,UACE,kDACA,+BAAO+C,EAAQ0B,gBAEjB,qBAAIzE,UAAU,oBAAd,UACE,mCAAS+C,EAAQhC,OAAjB,OACA,6CAEF,qBAAIf,UAAU,oBAAd,UACE,mCAAS+C,EAAQ2B,QAAjB,OACA,qDAhBD3B,EAAQC,WAuBrB,cAAC,EAAD,CAAUf,MAAOA,EAAOC,aA1CP,SAACf,GACpBmC,EAAenC,UEbJwD,EAdF,WAEX,IAAM9E,EAAWC,aAAY,SAAAC,GAAK,OAAEA,EAAMF,YAE1C,OACE,qBAAKG,UAAS,eAAUH,EAAW,aAAe,IAAlD,SACI,sBAAKG,UAAU,gBAAf,UACA,cAAC,EAAD,IACA,cAAC,EAAD,U,OCSO4E,MAjBf,WACE,OAEI,qBAAK5E,UAAU,MAAf,SACO,cAAC,IAAD,UACL,eAAC,IAAD,CAAO6E,KAAK,IAAZ,UACE,sCACJ,cAAC,EAAD,IACA,cAAC,EAAD,YCDSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCLRO,EAAe,CACnBzF,UAAU,EACV8C,aAAc,GACdC,YAAY,GACZ7B,OAAO,IA+BMwE,EA3BC,WAA8C,IAA7CxF,EAA4C,uDAApCuF,EAAoC,yCAApBpF,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC7C,OAAQD,GACN,KAAKT,EACH,OAAO,2BACFM,GADL,IAEEF,SAAUM,IAEd,KAAKV,EACH,OAAO,2BACFM,GADL,IAEE4C,aAAcxC,IAElB,KAAKV,EACH,OAAO,2BACFM,GADL,IAEE6C,YAAYzC,IAEhB,KAAKV,EACH,OAAO,2BACFM,GADL,IAEEgB,OAAOZ,IAEX,QACE,OAAOJ,ICzBEyF,EALDC,YACZF,EACAG,OAAOC,8BAAgCD,OAAOC,gCCKhDC,IAASC,OACL,cAAC,IAAD,UACA,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,QAIJM,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.e78222b5.chunk.js","sourcesContent":["export const actionTypes = {\r\n    SET_DARK_MODE:'SET_DARK_MODE',\r\n    SET_ALL_COUNTRIES: 'SET_ALL_COUNTRIES',\r\n    SET_SEARCH_QUERY: 'SET_SEARCH_QUERY',\r\n    SET_REGION: 'SET_REGION'\r\n}","import { FiMoon } from \"react-icons/fi\";\r\nimport \"./header.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setDarkMode } from \"../../redux/actions\";\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch();\r\n  const darkMode = useSelector((state) => state.darkMode);\r\n  const onDarkModeClick = () => {\r\n    dispatch(setDarkMode(darkMode ? false : true));\r\n  };\r\n\r\n  return (\r\n    <div className={`header ${darkMode ? 'header--dark' : ''}`}>\r\n      <div className=\"header__content\">\r\n      <h1 className=\"header__title\">Where in the world?</h1>\r\n      <div className=\"header__theme-changer\" onClick={onDarkModeClick}>\r\n        <FiMoon />\r\n        <p>Dark Mode</p>\r\n      </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { actionTypes } from \"./actionTypes\";\r\n\r\nexport const setDarkMode = (bool) => {\r\n  return {\r\n    type: actionTypes.SET_DARK_MODE,\r\n    payload: bool,\r\n  };\r\n};\r\n\r\nexport const setAllCountries = (countries) => {\r\n  return {\r\n    type: actionTypes.SET_ALL_COUNTRIES,\r\n    payload: countries\r\n  }\r\n}\r\n\r\nexport const setSearchQuery = (query) => {\r\n  return {\r\n    type: actionTypes.SET_SEARCH_QUERY,\r\n    payload: query\r\n  }\r\n}\r\n\r\nexport const setRegion = (region) => {\r\n  return {\r\n    type:actionTypes.SET_REGION,\r\n    payload: region\r\n  }\r\n}","import { AiOutlineSearch } from \"react-icons/ai\";\r\nimport { IoIosArrowDown,IoIosArrowUp } from \"react-icons/io\";\r\nimport \"./nav.css\";\r\nimport {useState} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { setRegion, setSearchQuery } from \"../../../redux/actions\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst Nav = () => {\r\n    const dispatch = useDispatch();\r\n    const darkMode = useSelector(state=>state.darkMode);\r\n    const [showCategories,setShowCategories] = useState(false);\r\n    const [searchValue,setSearchValue] = useState('')\r\n    const [categoryTitle,setCategoryTitle] = useState('Filter by Region')\r\n    const onCategoryClick = () => {\r\n        setShowCategories(showCategories ? false : true)\r\n    }\r\n\r\n    const onRegionClick = (e) => {\r\n      dispatch(setRegion(e.target.innerText));\r\n     setCategoryTitle(e.target.innerText);\r\n    }\r\n\r\n    const onSearch = () => {\r\n      dispatch(setSearchQuery(searchValue));\r\n     \r\n    }\r\n\r\n  return (\r\n    <div className=\"nav\">\r\n      <div className={`nav__search ${darkMode ? 'nav__search--dark' : ''}`}>\r\n        <AiOutlineSearch className=\"nav__search-icon\" onClick={onSearch}/>\r\n        <input\r\n          className=\"nav__search-input\"\r\n          type=\"text\"\r\n          placeholder=\"Search for a country...\"\r\n          value={searchValue}\r\n          onChange={e=>setSearchValue(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className={`nav__category ${darkMode ? 'nav__category--dark' : ''}`}>\r\n        <div className=\"category__title\"  onClick={onCategoryClick}>\r\n          <h4>{categoryTitle}</h4>\r\n          {showCategories ? <IoIosArrowUp/> : <IoIosArrowDown />} \r\n        </div>\r\n        {showCategories && <div className=\"category__options\" onClick={onCategoryClick}>\r\n          <div className=\"category__option\" onClick={onRegionClick}>Africa</div>\r\n          <div className=\"category__option\" onClick={onRegionClick}>America</div>\r\n          <div className=\"category__option\" onClick={onRegionClick}>Asia</div>\r\n          <div className=\"category__option\" onClick={onRegionClick}>Europe</div>\r\n          <div className=\"category__option\" onClick={onRegionClick}>Oceania</div>\r\n        </div> }\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Pagination } from \"@material-ui/lab\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst darkStyle = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n      '& ul > li:not(:first-child):not(:last-child) > button:not(.Mui-selected)': {\r\n        backgroundColor: '#2B3945',\r\n        color:'white',\r\n        \r\n       }\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      backgroundColor: \"#4a4780\",\r\n      color:'white'\r\n    }\r\n  }\r\n}));\r\n\r\nconst lightStyle = makeStyles((theme) => ({\r\n  root: {\r\n    \"& > *\": {\r\n      marginTop: theme.spacing(2),\r\n      '& ul > li:not(:first-child):not(:last-child) > button:not(.Mui-selected)': {\r\n        backgroundColor: 'white',\r\n        color:'#111517',\r\n        \r\n       }\r\n    },\r\n    \"& .MuiButtonBase-root\": {\r\n      backgroundColor: \"#b5b3e8\",\r\n      color:'#111517',\r\n      marginTop:'15px'\r\n    },\r\n    '& .MuiPagination-ul ':{\r\n      justifyContent:'center',\r\n      margin:'20px'\r\n    }\r\n  }\r\n}));\r\n\r\nconst Paginate = ({pages,onChangePage}) => {\r\n  const darkMode = useSelector(state => state.darkMode);\r\n  const classes = darkMode ? darkStyle() : lightStyle();\r\n  const onPaginate = (event, value) => {\r\n    onChangePage(value);\r\n  };\r\n  return (\r\n    <div className={classes.root}>\r\n      <Pagination\r\n        count={pages}\r\n        boundaryCount={1}\r\n\r\n        variant=\"outlined\"\r\n        shape=\"rounded\"\r\n        onChange={onPaginate}\r\n        \r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import \"./catalog.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { fetchAllCountries } from \"../../../API.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { setAllCountries } from \"../../../redux/actions\";\r\nimport Paginate from \"./Paginate\";\r\n\r\nconst Catalog = () => {\r\n  const dispatch = useDispatch();\r\n  const allCountries = useSelector((state) => state.allCountries);\r\n  const darkMode = useSelector((state) => state.darkMode);\r\n  const searchQuery = useSelector((state) => state.searchQuery);\r\n  const region = useSelector((state) => state.region);\r\n\r\n  const countries = allCountries.filter(\r\n    (country) =>\r\n      country.name.toUpperCase().includes(searchQuery.toUpperCase()) &&\r\n      country.region.includes(region)\r\n  );\r\n\r\nconsole.log(countries);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const countriesPerPage = 20;\r\n  const pages = Math.ceil(countries.length/countriesPerPage);\r\n  const indexOfLastCountry = currentPage * countriesPerPage;\r\n  const indexOfFirstCountry = indexOfLastCountry - countriesPerPage;\r\n  const currentPageCountries = countries.slice(\r\n    indexOfFirstCountry,\r\n    indexOfLastCountry\r\n  );\r\n\r\n  const onChangePage = (value) => {\r\n    setCurrentPage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchAllCountries().then((res) => {\r\n      dispatch(setAllCountries(res.data));\r\n      \r\n    });\r\n  }, [dispatch]);\r\n  return (\r\n    <div className=\"catalog\">\r\n      <div className=\"catalog__countries\">\r\n        {currentPageCountries &&\r\n          currentPageCountries.map((country) => (\r\n            <div\r\n              className={`catalog__country ${\r\n                darkMode ? \"catalog__country--dark\" : \"\"\r\n              }`}\r\n              key={country.name}\r\n            >\r\n              <img className=\"country__flag\" src={country.flag} alt=\"\" />\r\n              <div className=\"country__info\">\r\n                <h4 className=\"country__name\">{country.name}</h4>\r\n                <ul className=\"country__properties\">\r\n                  <li className=\"country__property\">\r\n                    <strong>Population: </strong>\r\n                    <span>{country.population}</span>\r\n                  </li>\r\n                  <li className=\"country__property\">\r\n                    <strong>{country.region} </strong>\r\n                    <span>Europe</span>\r\n                  </li>\r\n                  <li className=\"country__property\">\r\n                    <strong>{country.capital} </strong>\r\n                    <span>Berlin</span>\r\n                  </li>\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <Paginate pages={pages} onChangePage={onChangePage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Catalog;\r\n","import axios from 'axios';\r\n\r\nexport const fetchAllCountries = () => {\r\n   return axios.get('https://restcountries.eu/rest/v2/all')\r\n}","import Nav from \"./nav/Nav\";\r\nimport './main.css';\r\nimport Catalog from './catalog/Catalog';\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Main = () => {\r\n\r\n  const darkMode = useSelector(state=>state.darkMode);\r\n\r\n  return (\r\n    <div className={`main ${darkMode ? 'main--dark' : ''}`}>\r\n        <div className=\"main__content\">\r\n        <Nav />\r\n        <Catalog/>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import \"./App.css\";\nimport Header from \"./components/header/Header\";\nimport Main from \"./components/main/main\";\nimport {Switch, Route} from 'react-router-dom';\n\nfunction App() {\n  return (\n    \n      <div className=\"App\">\n             <Switch>\n        <Route path=\"/\">\n          <h1>home</h1>\n      <Header />\n      <Main /> \n        </Route>\n        </Switch>\n    </div>\n\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { actionTypes } from \"./actionTypes\";\r\n\r\nconst initialState = {\r\n  darkMode: false,\r\n  allCountries: [],\r\n  searchQuery:\"\",\r\n  region:\"\"\r\n \r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case actionTypes.SET_DARK_MODE:\r\n      return {\r\n        ...state,\r\n        darkMode: payload,\r\n      };\r\n    case actionTypes.SET_ALL_COUNTRIES:\r\n      return {\r\n        ...state,\r\n        allCountries: payload\r\n      }  \r\n    case actionTypes.SET_SEARCH_QUERY:\r\n      return {\r\n        ...state,\r\n        searchQuery:payload\r\n      }  \r\n    case actionTypes.SET_REGION:\r\n      return {\r\n        ...state,\r\n        region:payload\r\n      }  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;","import { createStore } from \"redux\";\r\nimport reducer from \"./reducer\";\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport {HashRouter as Router } from \"react-router-dom\";\nimport store from './redux/store';\nimport {Provider} from 'react-redux';\n\n\nReactDOM.render(\n    <Router>\n    <Provider store={store}>\n      <App />\n      </Provider>\n    </Router>\n  ,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}